typedef enum WASM_INSTR{
  WASM_INSTR_UNREACHABLE = 0x0,
  WASM_INSTR_NOP = 0x1,
  WASM_INSTR_BLOCK = 0x2,
  WASM_INSTR_LOOP = 0x3,
  WASM_INSTR_IF = 0x4,
  WASM_INSTR_ELSE = 0x5,
  WASM_INSTR_END = 0xb,
  WASM_INSTR_BR = 0xc,
  WASM_INSTR_BR_IF = 0xd,
  WASM_INSTR_BR_TABLE = 0xe,
  WASM_INSTR_RETURN = 0xf,
  WASM_INSTR_CALL = 0x10,
  WASM_INSTR_CALL_INDIRECT = 0x11,
  WASM_INSTR_DROP = 0x1a,
  WASM_INSTR_SELECT = 0x1b,
  WASM_INSTR_LOCAL_GET = 0x20,
  WASM_INSTR_LOCAL_SET = 0x21,
  WASM_INSTR_LOCAL_TEE = 0x22,
  WASM_INSTR_GLOBAL_GET = 0x23,
  WASM_INSTR_GLOBAL_SET = 0x24,
  WASM_INSTR_I32_LOAD = 0x28,
  WASM_INSTR_I64_LOAD = 0x29,
  WASM_INSTR_F32_LOAD = 0x2a,
  WASM_INSTR_F64_LOAD = 0x2b,
  WASM_INSTR_I32_LOAD8_S = 0x2c,
  WASM_INSTR_I32_LOAD8_U = 0x2d,
  WASM_INSTR_I32_LOAD16_S = 0x2e,
  WASM_INSTR_I32_LOAD16_U = 0x2f,
  WASM_INSTR_I64_LOAD8_S = 0x30,
  WASM_INSTR_I64_LOAD8_U = 0x31,
  WASM_INSTR_I64_LOAD16_S = 0x32,
  WASM_INSTR_I64_LOAD16_U = 0x33,
  WASM_INSTR_I64_LOAD32_S = 0x34,
  WASM_INSTR_I64_LOAD32_U = 0x35,
  WASM_INSTR_I32_STORE = 0x36,
  WASM_INSTR_I64_STORE = 0x37,
  WASM_INSTR_F32_STORE = 0x38,
  WASM_INSTR_F64_STORE = 0x39,
  WASM_INSTR_I32_STORE_8 = 0x3a,
  WASM_INSTR_I32_STORE_16 = 0x3b,
  WASM_INSTR_I64_STORE_8 = 0x3c,
  WASM_INSTR_I64_STORE_16 = 0x3d,
  WASM_INSTR_I64_STORE_32 = 0x3e,
  WASM_INSTR_MEMORY_SIZE = 0x3f,
  WASM_INSTR_MEMORY_GROW = 0x40,
  WASM_INSTR_I32_CONST = 0x41,
  WASM_INSTR_I64_CONST = 0x42,
  WASM_INSTR_F32_CONST = 0x43,
  WASM_INSTR_F64_CONST = 0x44,
  WASM_INSTR_I32_EQZ = 0x45,
  WASM_INSTR_I32_EQ = 0x46,
  WASM_INSTR_I32_NE = 0x47,
  WASM_INSTR_I32_LT_S = 0x48,
  WASM_INSTR_I32_LT_U = 0x49,
  WASM_INSTR_I32_GT_S = 0x4a,
  WASM_INSTR_I32_GT_U = 0x4b,
  WASM_INSTR_I32_LE_S = 0x4c,
  WASM_INSTR_I32_LE_U = 0x4d,
  WASM_INSTR_I32_GE_S = 0x4e,
  WASM_INSTR_I32_GE_U = 0x4f,
  WASM_INSTR_I64_EQZ = 0x50,
  WASM_INSTR_I64_EQ = 0x51,
  WASM_INSTR_I64_NE = 0x52,
  WASM_INSTR_I64_LT_S = 0x53,
  WASM_INSTR_I64_LT_U = 0x54,
  WASM_INSTR_I64_GT_S = 0x55,
  WASM_INSTR_I64_GT_U = 0x56,
  WASM_INSTR_I64_LE_S = 0x57,
  WASM_INSTR_I64_LE_U = 0x58,
  WASM_INSTR_I64_GE_S = 0x59,
  WASM_INSTR_I64_GE_U = 0x5a,
  WASM_INSTR_F32_EQ = 0x5b,
  WASM_INSTR_F32_NE = 0x5c,
  WASM_INSTR_F32_LT = 0x5d,
  WASM_INSTR_F32_GT = 0x5e,
  WASM_INSTR_F32_LE = 0x5f,
  WASM_INSTR_F32_GE = 0x60,
  WASM_INSTR_F64_EQ = 0x61,
  WASM_INSTR_F64_NE = 0x62,
  WASM_INSTR_F64_LT = 0x63,
  WASM_INSTR_F64_GT = 0x64,
  WASM_INSTR_F64_LE = 0x65,
  WASM_INSTR_F64_GE = 0x66,
  WASM_INSTR_I32_ADD = 0x6a,
  WASM_INSTR_I32_SUB = 0x6b,
  WASM_INSTR_I32_MUL = 0x6c,
  WASM_INSTR_I32_DIV_S = 0x6d,
  WASM_INSTR_I32_DIV_U = 0x6e,
  WASM_INSTR_I32_REM_S = 0x6f,
  WASM_INSTR_I32_REM_U = 0x70,
  WASM_INSTR_I32_AND = 0x71,
  WASM_INSTR_I32_OR = 0x72,
  WASM_INSTR_I32_XOR = 0x73,
  WASM_INSTR_I32_SHL = 0x74,
  WASM_INSTR_I32_SHR_S = 0x75,
  WASM_INSTR_I32_SHR_U = 0x76,
  WASM_INSTR_I32_ROTL = 0x77,
  WASM_INSTR_I32_ROTR = 0x78,
  WASM_INSTR_I64_CLZ = 0x79,
  WASM_INSTR_I64_CTZ = 0x7a,
  WASM_INSTR_I64_POPCNT = 0x7b,
  WASM_INSTR_I64_ADD = 0x7c,
  WASM_INSTR_I64_SUB = 0x7d,
  WASM_INSTR_I64_MUL = 0x7e,
  WASM_INSTR_I64_DIV_S = 0x7f,
  WASM_INSTR_I64_DIV_U = 0x80,
  WASM_INSTR_I64_REM_S = 0x81,
  WASM_INSTR_I64_REM_U = 0x82,
  WASM_INSTR_I64_AND = 0x83,
  WASM_INSTR_I64_OR = 0x84,
  WASM_INSTR_I64_XOR = 0x85,
  WASM_INSTR_I64_SHL = 0x86,
  WASM_INSTR_I64_SHR_S = 0x87,
  WASM_INSTR_I64_SHR_U = 0x88,
  WASM_INSTR_I64_ROTL = 0x89,
  WASM_INSTR_I64_ROTR = 0x8a,
  WASM_INSTR_F32_ABS = 0x8b,
  WASM_INSTR_F32_NEG = 0x8c,
  WASM_INSTR_F32_CEIL = 0x8d,
  WASM_INSTR_F32_FLOOR = 0x8e,
  WASM_INSTR_F32_TRUNC = 0x8f,
  WASM_INSTR_F32_NEAREST = 0x90,
  WASM_INSTR_F32_SQRT = 0x91,
  WASM_INSTR_F32_ADD = 0x92,
  WASM_INSTR_F32_SUB = 0x93,
  WASM_INSTR_F32_MUL = 0x94,
  WASM_INSTR_F32_DIV = 0x95,
  WASM_INSTR_F32_MIN = 0x96,
  WASM_INSTR_F32_MAX = 0x97,
  WASM_INSTR_F32_COPYSIGN = 0x98,
  WASM_INSTR_F64_ABS = 0x99,
  WASM_INSTR_F64_NEG = 0x9a,
  WASM_INSTR_F64_CEIL = 0x9b,
  WASM_INSTR_F64_FLOOR = 0x9c,
  WASM_INSTR_F64_TRUNC = 0x9d,
  WASM_INSTR_F64_NEAREST = 0x9e,
  WASM_INSTR_F64_SQRT = 0x9f,
  WASM_INSTR_F64_ADD = 0xa0,
  WASM_INSTR_F64_SUB = 0xa1,
  WASM_INSTR_F64_MUL = 0xa2,
  WASM_INSTR_F64_DIV = 0xa3,
  WASM_INSTR_F64_MIN = 0xa4,
  WASM_INSTR_F64_MAX = 0xa5,
  WASM_INSTR_F64_COPYSIGN = 0xa6,
  WASM_INSTR_I32_WRAP_I64 = 0xa7,
  WASM_INSTR_I32_TRUNC_F32_S = 0xa8,
  WASM_INSTR_I32_TRUNC_F32_U = 0xa9,
  WASM_INSTR_I32_TRUNC_F64_S = 0xaa,
  WASM_INSTR_I32_TRUNC_F64_U = 0xab,
  WASM_INSTR_I64_EXTEND_I32_S = 0xac,
  WASM_INSTR_I64_EXTEND_I32_U = 0xad,
  WASM_INSTR_I64_TRUNC_F32_S = 0xae,
  WASM_INSTR_I64_TRUNC_F32_U = 0xaf,
  WASM_INSTR_I64_TRUNC_F64_S = 0xb0,
  WASM_INSTR_I64_TRUNC_F64_U = 0xb1,
  WASM_INSTR_F32_CONVERT_I32_S = 0xb2,
  WASM_INSTR_F32_CONVERT_I32_U = 0xb3,
  WASM_INSTR_F32_CONVERT_I64_S = 0xb4,
  WASM_INSTR_F32_CONVERT_I64_U = 0xb5,
  WASM_INSTR_F32_DEMOTE_F64 = 0xb6,
  WASM_INSTR_F64_CONVERT_I32_S = 0xb7,
  WASM_INSTR_F64_CONVERT_I32_U = 0xb8,
  WASM_INSTR_F64_CONVERT_I64_S = 0xb9,
  WASM_INSTR_F64_CONVERT_I64_U = 0xba,
  WASM_INSTR_F64_PROMOTE_F32 = 0xbb,
  WASM_INSTR_I32_REINTERPRET_F32 = 0xbc,
  WASM_INSTR_I64_REINTERPRET_F64 = 0xbd,
  WASM_INSTR_F32_REINTERPRET_I32 = 0xbe,
  WASM_INSTR_F64_REINTERPRET_I64 = 0xbf,
}wasm_instr;
__attribute__((unused)) static const char * wasm_instr_name[] = {
  "UNREACHABLE",
  "NOP",
  "BLOCK",
  "LOOP",
  "IF",
  "ELSE",
  NULL, //reserved
  NULL, //reserved
  NULL, //reserved
  NULL, //reserved
  NULL, //reserved
  "END",
  "BR",
  "BR_IF",
  "BR_TABLE",
  "RETURN",
  "CALL",
  "CALL_INDIRECT",
  NULL, //reserved
  NULL, //reserved
  NULL, //reserved
  NULL, //reserved
  NULL, //reserved
  NULL, //reserved
  NULL, //reserved
  NULL, //reserved
  "DROP",
  "SELECT",
  NULL, //reserved
  NULL, //reserved
  NULL, //reserved
  NULL, //reserved
  "LOCAL_GET",
  "LOCAL_SET",
  "LOCAL_TEE",
  "GLOBAL_GET",
  "GLOBAL_SET",
  NULL, //reserved
  NULL, //reserved
  NULL, //reserved
  "I32_LOAD",
  "I64_LOAD",
  "F32_LOAD",
  "F64_LOAD",
  "I32_LOAD8_S",
  "I32_LOAD8_U",
  "I32_LOAD16_S",
  "I32_LOAD16_U",
  "I64_LOAD8_S",
  "I64_LOAD8_U",
  "I64_LOAD16_S",
  "I64_LOAD16_U",
  "I64_LOAD32_S",
  "I64_LOAD32_U",
  "I32_STORE",
  "I64_STORE",
  "F32_STORE",
  "F64_STORE",
  "I32_STORE_8",
  "I32_STORE_16",
  "I64_STORE_8",
  "I64_STORE_16",
  "I64_STORE_32",
  "MEMORY_SIZE",
  "MEMORY_GROW",
  "I32_CONST",
  "I64_CONST",
  "F32_CONST",
  "F64_CONST",
  "I32_EQZ",
  "I32_EQ",
  "I32_NE",
  "I32_LT_S",
  "I32_LT_U",
  "I32_GT_S",
  "I32_GT_U",
  "I32_LE_S",
  "I32_LE_U",
  "I32_GE_S",
  "I32_GE_U",
  "I64_EQZ",
  "I64_EQ",
  "I64_NE",
  "I64_LT_S",
  "I64_LT_U",
  "I64_GT_S",
  "I64_GT_U",
  "I64_LE_S",
  "I64_LE_U",
  "I64_GE_S",
  "I64_GE_U",
  "F32_EQ",
  "F32_NE",
  "F32_LT",
  "F32_GT",
  "F32_LE",
  "F32_GE",
  "F64_EQ",
  "F64_NE",
  "F64_LT",
  "F64_GT",
  "F64_LE",
  "F64_GE",
  NULL, //reserved
  NULL, //reserved
  NULL, //reserved
  "I32_ADD",
  "I32_SUB",
  "I32_MUL",
  "I32_DIV_S",
  "I32_DIV_U",
  "I32_REM_S",
  "I32_REM_U",
  "I32_AND",
  "I32_OR",
  "I32_XOR",
  "I32_SHL",
  "I32_SHR_S",
  "I32_SHR_U",
  "I32_ROTL",
  "I32_ROTR",
  "I64_CLZ",
  "I64_CTZ",
  "I64_POPCNT",
  "I64_ADD",
  "I64_SUB",
  "I64_MUL",
  "I64_DIV_S",
  "I64_DIV_U",
  "I64_REM_S",
  "I64_REM_U",
  "I64_AND",
  "I64_OR",
  "I64_XOR",
  "I64_SHL",
  "I64_SHR_S",
  "I64_SHR_U",
  "I64_ROTL",
  "I64_ROTR",
  "F32_ABS",
  "F32_NEG",
  "F32_CEIL",
  "F32_FLOOR",
  "F32_TRUNC",
  "F32_NEAREST",
  "F32_SQRT",
  "F32_ADD",
  "F32_SUB",
  "F32_MUL",
  "F32_DIV",
  "F32_MIN",
  "F32_MAX",
  "F32_COPYSIGN",
  "F64_ABS",
  "F64_NEG",
  "F64_CEIL",
  "F64_FLOOR",
  "F64_TRUNC",
  "F64_NEAREST",
  "F64_SQRT",
  "F64_ADD",
  "F64_SUB",
  "F64_MUL",
  "F64_DIV",
  "F64_MIN",
  "F64_MAX",
  "F64_COPYSIGN",
  "I32_WRAP_I64",
  "I32_TRUNC_F32_S",
  "I32_TRUNC_F32_U",
  "I32_TRUNC_F64_S",
  "I32_TRUNC_F64_U",
  "I64_EXTEND_I32_S",
  "I64_EXTEND_I32_U",
  "I64_TRUNC_F32_S",
  "I64_TRUNC_F32_U",
  "I64_TRUNC_F64_S",
  "I64_TRUNC_F64_U",
  "F32_CONVERT_I32_S",
  "F32_CONVERT_I32_U",
  "F32_CONVERT_I64_S",
  "F32_CONVERT_I64_U",
  "F32_DEMOTE_F64",
  "F64_CONVERT_I32_S",
  "F64_CONVERT_I32_U",
  "F64_CONVERT_I64_S",
  "F64_CONVERT_I64_U",
  "F64_PROMOTE_F32",
  "I32_REINTERPRET_F32",
  "I64_REINTERPRET_F64",
  "F32_REINTERPRET_I32",
  "F64_REINTERPRET_I64",
};
__attribute__((unused)) static int wasm_instr_count = 192;
